using System.Collections.Generic;
using System.IO;
using Tera.Data.Structures.Player;

namespace Tera.Network.old_Server
{
    public class SpInventory : ASendPacket
    {
        protected Player Player;
        protected bool IsInventory;

        public SpInventory(Player player, bool isInventory = false)
        {
            Player = player; //73
            IsInventory = isInventory;
        }

	

        public override void Write(BinaryWriter writer)
        {
            lock (Player.Inventory.ItemsLock)
            {
                WriteWord(writer, (short) Player.Inventory.Items.Count);
                WriteWord(writer, 0); //first item shift
                WriteUid(writer, Player);
                WriteLong(writer, Player.Inventory.Money);
                WriteByte(writer, (byte) (IsInventory ? 1 : 0));
                WriteWord(writer, 1); //Unk
                WriteDword(writer, Player.Inventory.Size); //Size

                WriteDword(writer, 34); //EU ???
                WriteDword(writer, 34); //EU ???

                writer.Seek(6, SeekOrigin.Begin);
                WriteWord(writer, (short) writer.BaseStream.Length);
                writer.Seek(0, SeekOrigin.End);

                int counter = 0;

                foreach (KeyValuePair<int, StorageItem> inventoryItem in Player.Inventory.Items)
                {
                    counter++;
                    short nowShift = (short) writer.BaseStream.Length;

                    WriteWord(writer, nowShift); //Now shift
                    WriteWord(writer, 0); //Next shift

                    WriteDword(writer, inventoryItem.Value.ItemId);
                    WriteUid(writer, inventoryItem.Value);
                    WriteDword(writer, 7441);
                    WriteDword(writer, 0);
                    WriteDword(writer, inventoryItem.Key);
                    WriteDword(writer, 0);
                    WriteDword(writer, inventoryItem.Value.Amount);
                    WriteDword(writer, 0);
                    WriteDword(writer, 0);
                    WriteDword(writer, 1); //Binded?
                    WriteDword(writer, 0);
                    WriteDword(writer, 0);
                    WriteDword(writer, 0);
                    WriteDword(writer, 0);
                    WriteByte(writer, 0);
                    WriteDword(writer, 0); //EffectId
                    WriteDword(writer, 0); //EffectId
                    WriteDword(writer, 0); //EffectId
                    WriteDword(writer, 0); //EffectId
                    WriteByte(writer, new byte[65]); //unk
                    WriteDword(writer, 1); //Item Level
                    WriteDword(writer, 0);

                    if (counter < Player.Inventory.Items.Count)
                    {
                        writer.Seek(nowShift + 2, SeekOrigin.Begin);
                        WriteWord(writer, (short) writer.BaseStream.Length);
                        writer.Seek(0, SeekOrigin.End);
                    }
                }
            }
        }
    }
}